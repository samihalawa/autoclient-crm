# Optimized Dockerfile for Google Cloud Run
# Multi-stage build for Twenty CRM

# Stage 1: Base dependencies
FROM node:24-alpine AS deps
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache python3 make g++ postgresql-client curl jq

# Copy package files
COPY package.json yarn.lock .yarnrc.yml tsconfig.base.json nx.json ./
COPY .yarn/releases .yarn/releases
COPY .yarn/patches .yarn/patches
COPY .prettierrc ./

# Copy workspace package.json files
COPY packages/twenty-emails/package.json packages/twenty-emails/
COPY packages/twenty-server/package.json packages/twenty-server/
COPY packages/twenty-server/patches packages/twenty-server/patches
COPY packages/twenty-ui/package.json packages/twenty-ui/
COPY packages/twenty-shared/package.json packages/twenty-shared/
COPY packages/twenty-front/package.json packages/twenty-front/

# Install dependencies
RUN yarn install --immutable && \
    yarn cache clean && \
    npx nx reset

# Stage 2: Build backend
FROM deps AS backend-build
WORKDIR /app

# Copy backend source
COPY packages/twenty-emails packages/twenty-emails
COPY packages/twenty-shared packages/twenty-shared
COPY packages/twenty-server packages/twenty-server

# Build backend
RUN npx nx build twenty-server && \
    yarn workspaces focus --production twenty-emails twenty-shared twenty-server

# Stage 3: Build frontend
FROM deps AS frontend-build
WORKDIR /app

ARG REACT_APP_SERVER_BASE_URL
ENV REACT_APP_SERVER_BASE_URL=${REACT_APP_SERVER_BASE_URL}

# Copy frontend source
COPY packages/twenty-front packages/twenty-front
COPY packages/twenty-ui packages/twenty-ui
COPY packages/twenty-shared packages/twenty-shared

# Build frontend
RUN npx nx build twenty-front

# Stage 4: Production image
FROM node:24-alpine AS production
WORKDIR /app

# Install runtime dependencies
RUN apk add --no-cache curl jq postgresql-client && \
    npm install -g tsx

# Create non-root user
RUN addgroup -g 1000 twenty && \
    adduser -D -u 1000 -G twenty twenty

# Copy built artifacts
COPY --from=backend-build --chown=twenty:twenty /app /app
COPY --from=frontend-build --chown=twenty:twenty /app/packages/twenty-front/build /app/packages/twenty-server/dist/front

# Create storage directories
RUN mkdir -p /app/.local-storage /app/packages/twenty-server/.local-storage && \
    chown -R twenty:twenty /app

# Set working directory
WORKDIR /app/packages/twenty-server

# Switch to non-root user
USER twenty

# Expose port (Cloud Run uses PORT env var)
ENV PORT=8080
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:${PORT}/healthz || exit 1

# Start application
CMD ["node", "dist/src/main"]
